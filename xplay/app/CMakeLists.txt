# Sets the minimum version of CMake required to build the native
# library. You should either keep the default value or only pass a
# value of 3.4.0 or lower.

cmake_minimum_required(VERSION 3.4.1)

# Creates and names a library, sets it as either STATIC
# or SHARED, and provides the relative paths to its source code.
# You can define multiple libraries, and CMake builds it for you.
# Gradle automatically packages shared libraries with your APK.
# 添加头文件的路径（相对本文件路径）
include_directories(include)

# 设置FFmpeg库的路径变量
set(FF ${CMAKE_CURRENT_SOURCE_DIR}/libs/${ANDROID_ABI})
add_library(avcodec SHARED IMPORTED)
set_target_properties(avcodec PROPERTIES IMPORTED_LOCATION ${FF}/libavcodec.so)

add_library(avformat SHARED IMPORTED)
set_target_properties(avformat PROPERTIES IMPORTED_LOCATION ${FF}/libavformat.so)

add_library(avutil SHARED IMPORTED)
set_target_properties(avutil PROPERTIES IMPORTED_LOCATION ${FF}/libavutil.so)

add_library(swscale SHARED IMPORTED)
set_target_properties(swscale PROPERTIES IMPORTED_LOCATION ${FF}/libswscale.so)

add_library(swresample SHARED IMPORTED)
set_target_properties(swresample PROPERTIES IMPORTED_LOCATION ${FF}/libswresample.so)
add_library( # Sets the name of the library.
             native-lib

             # Sets the library as a shared library.
             SHARED

             # Provides a relative path to your source file(s).
             # Associated headers in the same location as their source
             # file are automatically included.
        src/main/cpp/native-lib.cpp
        src/main/cpp/IDemux.cpp
        src/main/cpp/FFDemux.cpp
        src/main/cpp/XData.cpp
        src/main/cpp/XLog.cpp
        src/main/cpp/XThread.cpp
        src/main/cpp/IObserver.cpp
        src/main/cpp/FFDecode.cpp
        src/main/cpp/IDecode.cpp
        src/main/cpp/XParameter.cpp
        src/main/cpp/IVideoView.cpp
        src/main/cpp/GLVideoView.cpp
        src/main/cpp/XTexture.cpp
        src/main/cpp/XEGL.cpp
        src/main/cpp/XShader.cpp
        src/main/cpp/FFResample.cpp
        src/main/cpp/IResample.cpp
)

# Searches for a specified prebuilt library and stores the path as a
# variable. Because system libraries are included in the search path by
# default, you only need to specify the name of the public NDK library
# you want to add. CMake verifies that the library exists before
# completing its build.

find_library( # Sets the name of the path variable.
              log-lib

              # Specifies the name of the NDK library that
              # you want CMake to locate.
              log )

# Specifies libraries CMake should link to your target library. You
# can link multiple libraries, such as libraries you define in the
# build script, prebuilt third-party libraries, or system libraries.

target_link_libraries( # Specifies the target library.
                       native-lib
                       GLESv2 EGL
                       OpenSLES
                       android
                        avcodec avformat avutil swscale swresample
                       # Links the target library to the log library
                       # included in the NDK.
                       ${log-lib} )
